@{
    ViewData["Title"] = "Aws Page";
}
<head>
    <meta charset="utf-8"/>
    <title>Record Audio</title>

    <!-- Recorder.js k端t端phanesi -->
    <script src="https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js"></script>

    <!-- jQuery k端t端phanesi -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>

    <style>
           body {
             background-color: #F5F5F5;
             font-family: Arial, sans-serif;
           }
           
           #container {
             margin: auto;
             width: 50%;
             text-align: center;
             padding: 10px;
             background-color: #f0f0f0;
             border-radius: 5px;
             box-shadow: 0px 0px 5px #888888;
           }
           
           #recordButton {
             background-color: #237804;
             color: #FFFFFF;
             border: none;
             padding: 3px 10px;
             border-radius: 5px;
             font-size: 20px;
             cursor: pointer;
             margin: 10px;
           }
           
           #recordButton:hover {
             background-color: #00475A;
           }
           
           #textarea {
             width: 100%;
             height: 400px;
             border-radius: 5px;
             background: #f0f0f0;
             border: none;
             padding: 10px;
             margin-top: 20px;
             font-size: 16px;
           }
           #server,
         #token,
         #state {
           display: block;
           color: black;
           font-size: 18px;
           margin-bottom: 10px;
           text-align: left;
         }
         
         .token-value,
         .state-value {
           color: black;
           font-weight: bold;
           margin-left: 10px;
         }


        </style>
</head>

<body>
<div id="container">
    <div style="display: flex; align-items: center;">
        <label id="token">Token:</label>
        <span id="tokenValue" class="state-value"></span>
    </div>
    <div style="display: flex; align-items: center;">
        <label id="state">State:</label>
        <span id="stateValue" class="state-value">Waiting</span>
    </div>
    <div style="display: flex; align-items: center;">
        <label id="server">Server:</label>
        <span id="serverValue" class="state-value">Await</span>
    </div>
    <button hidden="hidden" id="recordButton">Record</button>
    <textarea id="textarea" placeholder="Recorded audio will appear here..."></textarea>
</div>
<script>
//when document is ready
document.addEventListener("DOMContentLoaded", function () {
   
    let token;
    //create url 5145 port
    let url="https://localhost:5145/api/whisper/messageHub";
   const connection = new signalR.HubConnectionBuilder()
       .withUrl(url)
       .configureLogging(signalR.LogLevel.Information)
       .build();
   
   async function start() {
       try {
           await connection.start();
           token = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
           document.getElementById("tokenValue").innerHTML= token;
           //send Subscribe method token
           connection.send("Subscribe", token)
           console.log("SignalR Connected.");
           document.getElementById("stateValue").innerHTML= "Connected";
           document.getElementById("recordButton").hidden = false;
       } catch (err) {
           console.log(err);
           setTimeout(start, 5000);
       } 
   };
     
    connection.on("ReceiveMessage", function (message) {
        console.log(message);
        //write text area
        document.getElementById("textarea").value += message;
    })
    connection.on("ServerMessage", function (message) {
        console.log(message);
    })
    
    start();
        
    
            var recording = false;
            var recorder;
            $('#recordButton').click(function() {
                if (!recording) {
                    startRecording();
                    recording = true;
                    $('#recordButton').html('Stop');
                } else {
                    stopRecording();
                    recording = false;
                    $('#recordButton').html('Record');
                }
            });
    
            function startRecording() {
                if(token != null && token != ""){
                    debugger;
                navigator.mediaDevices.getUserMedia({audio: true})
                    .then(function(stream) {
                       recorder = new MediaRecorder(stream);
                       recorder.addEventListener('dataavailable', saveRecording)
                       recorder.start();
                       recording = true;
                    }).catch(function(err) {
                        console.log(err);
                        $('#textarea').val(err);
                    });
                }
              
            }
            function saveRecording(e) {
             
                const blob = new Blob([e.data], {type: 'audio/wav'});
                const file = new File([blob], 'audio.wav', {type: 'audio/wav'});
                const formData = new FormData();
                formData.append('file', file);
                SendAudio(formData);
                
            }
            function stopRecording() {
                recorder.stop();
                recording = false;
            }
            function SendAudio(audio) {
    
                                   $.ajax({
                                       url: 'https://localhost:5145/Api/Whisper/Recognition/Recognize?token='+token+'&isTranslate=false',
                                       type: 'POST',
                                       data: audio,
                                       processData: false,
                                       contentType: false,
                                       success: function(response) {
                                       },
                                       error: function(xhr, status, error) {
                                        
                                         error = JSON.parse(xhr.responseText);
                                            $('#textarea').val(error.message);
                                       }
                                   });
            }
})
       
    </script>
</body>